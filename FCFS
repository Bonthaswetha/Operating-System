#include <stdio.h>

struct Process {
    int pid;       
    int arrival;  
    int burst;      
    int completion;
    int turnaround; 
    int waiting;   
    int response; 
};


void sortByArrival(struct Process p[], int n) {
    struct Process temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (p[i].arrival > p[j].arrival) {
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }
}


void calculateTimes(struct Process p[], int n) {
    int currentTime = 0;

    for (int i = 0; i < n; i++) {
        if (currentTime < p[i].arrival) {
            currentTime = p[i].arrival; 
        }
        
        p[i].response = currentTime - p[i].arrival; 
        p[i].completion = currentTime + p[i].burst; 
        p[i].turnaround = p[i].completion - p[i].arrival; 
        p[i].waiting = p[i].turnaround - p[i].burst; 
        
        currentTime = p[i].completion; 
    }
}


void displayResults(struct Process p[], int n) {
    printf("\nPID\tArrival\tBurst\tCompletion\tTurnaround\tWaiting\tResponse\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t\t%d\t\t%d\t%d\n",
               p[i].pid, p[i].arrival, p[i].burst, p[i].completion, p[i].turnaround, p[i].waiting, p[i].response);
    }
}


int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process p[n];

    for (int i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process %d: ", i + 1);
        p[i].pid = i + 1;
        scanf("%d %d", &p[i].arrival, &p[i].burst);
    }


    sortByArrival(p, n);

    calculateTimes(p, n);

   
    displayResults(p, n);

    return 0;
}

___________________________________________________________________________________________________________________
output:
Enter the number of processes: 4
Enter arrival time and burst time for process 1: 3 8
Enter arrival time and burst time for process 2: 6 9
Enter arrival time and burst time for process 3: 5 9
Enter arrival time and burst time for process 4: 2 8

PID     Arrival Burst   Completion      Turnaround      Waiting Response
4       2       8       10              8               0       0
1       3       8       18              15              7       7
3       5       9       27              22              13      13
2       6       9       36              30              21      21
